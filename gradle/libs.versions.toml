#[versions]
#junit = "4.13.2"
#kotlin = "2.0.20"
#ktor = "2.3.12"
#logback = "1.5.8"
#
#[libraries]
#kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
#kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
#junit = { group = "junit", name = "junit", version.ref = "junit" }
#logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
#ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
#ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
#ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }
#
#[plugins]
#kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
#ktor = { id = "io.ktor.plugin", version.ref = "ktor" }

[versions]
kotlin = "2.0.20"
ktor = "3.0.+"
ksp = "2.0.20-1.0.+"
logback = "1.5.6"
coroutines = "1.9.0"
datetime = "0.6.+"
mockk = "1.13.13"
serialize-json = "1.7.+"
koin-bom = "4.0.0"
koin-ksp = "1.4.0-RC4"
r2dbc-migrate = "3.0.6"

[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

ktor-client-core = { module = "io.ktor:ktor-client-core" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors" }
ktor-server-cn = { module = "io.ktor:ktor-server-content-negotiation" }
ktor-server-json = { module = "io.ktor:ktor-serialization-kotlinx-json" }
ktor-status-pages = { module = "io.ktor:ktor-server-status-pages" }
ktor-server-resources = { module = "io.ktor:ktor-server-resources" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm" }
ktor-server-tests = { module = "io.ktor:ktor-server-test-host" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
kotlinx-serialize-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialize-json" }

# DI
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-ktor = { module = "io.insert-koin:koin-ktor" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koin-ksp" }
koin-ksp-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koin-ksp" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5" }

# DB
komapper-dialect-postgresql-r2dbc = { module = "org.komapper:komapper-dialect-postgresql-r2dbc" }
komapper-dialect-h2-r2dbc = { module = "org.komapper:komapper-dialect-h2-r2dbc" }
komapper-processor = { module = "org.komapper:komapper-processor" }
komapper-starter-r2dbc = { module = "org.komapper:komapper-starter-r2dbc" }

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
r2dbc-migrate = { module = "name.nkonev.r2dbc-migrate:r2dbc-migrate-core", version.ref = "r2dbc-migrate" }
r2dbc-migrate-impl = { module = "name.nkonev.r2dbc-migrate:r2dbc-migrate-resource-reader-reflections", version.ref = "r2dbc-migrate" }

# DB
#ktorm-core = { module = "org.ktorm:ktorm-core", version.ref = "ktorm"}

[plugins]
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp"}
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
